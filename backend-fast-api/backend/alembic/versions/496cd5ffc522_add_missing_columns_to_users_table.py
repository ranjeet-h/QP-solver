"""Add missing columns to users table

Revision ID: 496cd5ffc522
Revises: 
Create Date: 2025-04-12 20:15:13.753382

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '496cd5ffc522'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('pdfs', 'user_id',
               existing_type=mysql.INTEGER(),
               nullable=True)
    op.alter_column('pdfs', 'status',
               existing_type=mysql.ENUM('pending', 'processing', 'completed', 'failed'),
               nullable=False,
               existing_server_default=sa.text("'pending'"))
    op.alter_column('pdfs', 'created_at',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('pdfs', 'processed_at',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.create_index(op.f('ix_pdfs_id'), 'pdfs', ['id'], unique=False)
    op.add_column('users', sa.Column('first_name', sa.String(length=255), nullable=False))
    op.add_column('users', sa.Column('last_name', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('phone_number', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('latitude', sa.Float(), nullable=True))
    op.add_column('users', sa.Column('longitude', sa.Float(), nullable=True))
    op.add_column('users', sa.Column('ip_address', sa.String(length=255), nullable=True))
    op.alter_column('users', 'created_at',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_index('email', table_name='users')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_index('email', 'users', ['email'], unique=False)
    op.alter_column('users', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=mysql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_column('users', 'ip_address')
    op.drop_column('users', 'longitude')
    op.drop_column('users', 'latitude')
    op.drop_column('users', 'phone_number')
    op.drop_column('users', 'last_name')
    op.drop_column('users', 'first_name')
    op.drop_index(op.f('ix_pdfs_id'), table_name='pdfs')
    op.alter_column('pdfs', 'processed_at',
               existing_type=sa.DateTime(timezone=True),
               type_=mysql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('pdfs', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=mysql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('pdfs', 'status',
               existing_type=mysql.ENUM('pending', 'processing', 'completed', 'failed'),
               nullable=True,
               existing_server_default=sa.text("'pending'"))
    op.alter_column('pdfs', 'user_id',
               existing_type=mysql.INTEGER(),
               nullable=False)
    # ### end Alembic commands ###
